name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main, develop]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}

  
jobs:

  navigation-guide:
    name: Navigation Guide
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install agentic-navigation-guide
        run: cargo install agentic-navigation-guide

      - name: Verify navigation guide
        run: agentic-navigation-guide verify

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Just
        uses: extractions/setup-just@v3 

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Check formatting
        run: just ci-check-format


  build:
    name: Build
    needs: [fmt, navigation-guide]
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        profile: [debug, release]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Just
        uses: extractions/setup-just@v3 

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build all targets
        run: just ci-build-all-${{ matrix.profile }}

  clippy:
    name: Clippy
    needs: [build]
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        profile: [debug, release]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Just
        uses: extractions/setup-just@v3 

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run clippy
        run: just ci-run-clippy-${{ matrix.profile }}

  docs:
    name: Documentation
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Just
        uses: extractions/setup-just@v3 

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Check documentation
        run: just ci-check-docs

      - name: Spot-check doctests (debug)
        run: just ci-run-doc-tests-debug


  test:
    name: Test (${{ matrix.profile }}) on ${{ matrix.os }} with Rust ${{ matrix.rust }}
    needs: [build, fmt, clippy, docs, navigation-guide]
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]
        profile: [debug, release]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Just
        uses: extractions/setup-just@v3 

      - name: Install Rust ${{ matrix.rust }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      # Use Swatinem/rust-cache for more efficient caching than manual cache actions
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build ${{ matrix.profile }}
        run: just ci-build-${{ matrix.profile }}

      - name: Run doc tests 
        run: just ci-run-doc-tests-${{ matrix.profile }}
        
      - name: Run unit and integration tests
        run: just ci-run-tests-${{ matrix.profile }}

      - name: Run concurrency tests
        if: matrix.profile == 'release'
        run: just ci-run-concurrency-tests-${{ matrix.profile }}        
